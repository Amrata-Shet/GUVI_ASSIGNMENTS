Question 1)The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:
      title, which is a String representing the title of the movie
      studio, which is a String representing the studio that made the movie
      rating, which is a String representing the rating of the movie (i.e. PG13, R, etc)
      
1)a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, and a String representing the rating as its 
arguments, and sets the respective class properties to these values.
Answer/Code:

class movie{
    constructor(title,studio,rating){
        this.title=title;
        this.studio=studio;
        this.rating=rating;
    }

}
var movie1=new movie("maharshi","ramstudio","pg13");
var movie2=new movie('bahubali','studio','r');
console.log(movie1,movie2);

Output:

movie { title: 'maharshi', studio: 'wstudio', rating: 'pg13' } movie { title: 'bahubali', studio: 'studio', rating: 'r' }

1)b)The constructor for the class Movie will set the class property rating to "PG" as default when no rating provided. 
Answer/Code:

class movie{
    constructor(title,studio,rating='PG'){
        this.title=title;
        this.studio=studio;
        this.rating=rating;
    }

}
var movie1=new movie("kgf","studio");
var movie2=new movie('svp2','A1studio','r');
console.log(movie1,movie2);


Output:
movie { title: 'kgf', studio: 'studio', rating: 'PG' } movie { title: 'svp2', studio: 'A', rating: 'r' }


1)c)Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the input array with a rating of "PG". 
You may assume the input array is full of Movie instances. The returned array need not be full.
Answer/Code:

class movie{
  	 constructor(title,studio,rating='PG'){
        	this.title=title;
        	this.studio=studio;
        	this.rating=rating;
    	}
   getPG()
	{
		if(this.rating=='PG')
		{
			return this.movie
		}
		else
		{
			return ''
		}
	}
}
var movie1=new movie("kgf","studio");
var movie2=new movie('svp2','A1studio','r')
console.log(movie1.getPG(),movie2.getPG())



1)d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG­13”.
Answer/Code:                     
                   
class movie{
    constructor(title,studio,rating='PG'){
        this.title=title;
        this.studio=studio;
        this.rating=rating;
    }

}
var movie1=new movie('Casino Royale','Eon Productions','PG13');

console.log(movie1)
 
 
Output:
movie {
  title: 'Casino Royale',
  studio: 'Eon Productions',
  rating: 'PG13'
} 

Question 2)Convert the UML diagram to Typescript class. - use number for double
Answer/Code:

class circle{
    constructor(radius,color){
        this.radius=radius;
        this.color=color;
        
    }
    circle(){
        console.log("this is circle")
    }
    circle(radius){
        console.log("method overriding")
    }
    circle(radius,color){
        console.log(this.radius,this.color+'final method overriding which accepts by javascripot')
    }
    getradius(){
        console.log(" radius of the circle is "+this.radius)
    }
    setradius(newradius){
       this.radius=newradius;

    }
    getcolor(){
        console.log(' color of the circle is '+this.color)
    }

    setcolor(newcolor){
        this.color=newcolor;
    }
    getarea(){
        console.log('area of circle is '+(Math.PI*Math.pow(this.radius,2)))
    }
    getcircumference(){
        console.log(' circumference of a circle is '+(2*Math.PI*this.radius))
    }

} 
let circle1=new circle(1,"green");

circle1.getradius();
circle1.setradius(3)
circle1.getradius();
circle1.getcolor();
circle1.setcolor("black");
circle1.getcolor();
circle1.getarea();
circle1.getcircumference();


Output:
 radius of the circle is 1
 radius of the circle is 3
 color of the circle is green
 color of the circle is black
 area of circle is 28.274333882308138
 circumference of a circle is 18.84955592153876
Execution Time:
0.066s
Memory Used:
8084kb


Question 3)Write a “person” class to hold all the details.
Answer/Code:

class person {
  constructor(name,father_name,mother_name,aadhar_no,gender,address,mobile_No,Email) {
    this.name = name ;
    this.father_name = father_name ;
    this.mother_name = mother_name;
    this.aadhar_no = aadhar_no;
    this.gender = gender; ;
    this.address = address ;
    this.mobile_No = mobile_No; ;
    this.Email = Email;
 }
  person_name() {
    return `my name is  ${this.name}`;
  }

  person_father_name() {
    return `my father name is ${this.father_name}`;
  }
  person_mother_name() {
    return `my mother name is ${this.mother_name}`;
  }
  person_aadhar_no() {
    return `aadhar_no  is ${this.aadhar_no}`;
  }
  person_gender() {
    return `i am ${this.gender}`;
  }
  person_address() {
    return `my address is ${this.address}`;
  }
  person_mobile_no() {
    return `my mobile_no is ${this.mobile_No}`;
  }
  person_Email() {
    return `my email is ${this.Email}`;
  }
}
//object
const obj = new person("Amruta","Ashok","Chandrakala","####-####-####","Female","Sirsi","9036086374","amruta.shet@gmail.com");

console.log(obj.person_name());
console.log(obj.person_father_name());
console.log(obj.person_mother_name());
console.log(obj.person_aadhar_no());

console.log(obj.person_gender());
console.log(obj.person_address());
console.log(obj.person_mobile_no());
console.log(obj.person_Email());

Output:
my name is Amruta
my father name is Ashok
my mother name is Chandrakala
my aadhar no is ####-####-####
i am Female
my adress is Sirsi
my mobile no is 9036086374
my email is amruta.shet@gmail.com


Question 4)write a class to calculate uber price.
Answer/Code:

       class UberPriceCalculator{
    constructor(CRD,SBM,basefare,CPM,TR,ridedistance,bookingfee){
        
        this.CRD=CRD;
        this.SBM=SBM;
        this.basefare=basefare;
        this.CPM=CPM;
        this.TR=TR;
        this.ridedistance=ridedistance
        this.bookingfee=bookingfee;

    }
    getprice(){
        console.log(" UBER PRICE IS "+(this.basefare + ((this.CPM * this.TR) + (this.CRD* this.ridedistance) *this.SBM) + this.bookingfee ))
    }   
}
var cost1=new UberPriceCalculator(100,5,20,15,10,3,20);
cost1.getprice()

Output:
 UBER PRICE IS 1690
Execution Time:
0.067s
Memory Used:
8096kb
